# Generated by Django 5.1.2 on 2024-10-13 23:41

import datetime
import django.core.validators
import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Invoice',
            fields=[
                ('invoice_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('invoice_date', models.DateField()),
                ('due_date', models.DateField()),
                ('bill_to_name', models.CharField(max_length=255)),
                ('bill_to_address', models.TextField()),
                ('bill_to_email', models.EmailField(max_length=254)),
                ('from_name', models.CharField(max_length=255)),
                ('from_address', models.TextField()),
                ('from_email', models.EmailField(max_length=254)),
                ('subtotal', models.DecimalField(decimal_places=2, max_digits=10)),
                ('tax', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('total_amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('payment_status', models.CharField(choices=[('Pending', 'Pending'), ('Paid', 'Paid'), ('Overdue', 'Overdue')], max_length=50)),
                ('payment_method', models.CharField(blank=True, max_length=50, null=True)),
                ('transaction_id', models.UUIDField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('project_id', models.CharField(max_length=50, primary_key=True, serialize=False, unique=True)),
                ('project_name', models.CharField(max_length=50)),
                ('client_name', models.CharField(max_length=50)),
                ('city', models.CharField(max_length=50)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('description', models.TextField(blank=True)),
                ('status', models.CharField(max_length=50)),
                ('folder_location', models.CharField(max_length=255)),
                ('template', models.CharField(blank=True, max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='ProjectChangeLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('project_id', models.CharField(max_length=50)),
                ('project_name', models.CharField(max_length=50)),
                ('manager', models.CharField(max_length=50)),
                ('client_name', models.CharField(max_length=50)),
                ('city', models.CharField(max_length=50)),
                ('start_date', models.CharField(max_length=50)),
                ('end_date', models.CharField(max_length=50)),
                ('description', models.TextField()),
                ('status', models.CharField(max_length=50)),
                ('changed_by', models.CharField(max_length=50)),
                ('change_time', models.DateTimeField(auto_now_add=True)),
                ('change_description', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='TaskChangeLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('task_id', models.CharField(max_length=50)),
                ('task_title', models.CharField(max_length=50)),
                ('description', models.TextField()),
                ('assigned_to', models.CharField(max_length=50)),
                ('project_id', models.CharField(max_length=100)),
                ('due_date', models.CharField(max_length=50)),
                ('changed_by', models.CharField(max_length=50)),
                ('change_time', models.DateTimeField(auto_now_add=True)),
                ('change_description', models.TextField()),
                ('is_approved', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('name', models.CharField(max_length=50)),
                ('email', models.EmailField(max_length=50, unique=True)),
                ('password', models.CharField(max_length=255)),
                ('role', models.CharField(choices=[('Manager', 'Manager'), ('Employee', 'Employee'), ('Administrator', 'Administrator'), ('Accountant', 'Accountant')], max_length=50)),
                ('date_joined', models.DateField(auto_now_add=True)),
                ('username', models.CharField(default='', max_length=50)),
                ('microsoft_id', models.CharField(default='', max_length=50)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('task_id', models.CharField(max_length=50, primary_key=True, serialize=False, unique=True)),
                ('title', models.CharField(max_length=50)),
                ('description', models.CharField(max_length=50)),
                ('due_date', models.DateField()),
                ('status', models.CharField(default='ACTIVE', max_length=50)),
                ('is_approved', models.BooleanField(default=True)),
                ('completion_percentage', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('project_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tasks', to='Trinity_Project.project')),
                ('assigned_to', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tasks', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Submittal',
            fields=[
                ('submittal_id', models.CharField(max_length=50, primary_key=True, serialize=False)),
                ('received_date', models.DateField()),
                ('sub_description', models.TextField()),
                ('type', models.CharField(max_length=50)),
                ('status', models.CharField(max_length=50)),
                ('notes', models.TextField()),
                ('closing_notes', models.TextField(blank=True, default='')),
                ('sent_item', models.TextField(blank=True, default='')),
                ('send_email', models.TextField(blank=True, default='')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='submittals', to='Trinity_Project.project')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='submittals', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='RFI',
            fields=[
                ('date_received', models.DateField()),
                ('RFI_id', models.CharField(max_length=50, primary_key=True, serialize=False)),
                ('sent_out_date', models.DateField()),
                ('type', models.CharField(max_length=50)),
                ('notes', models.TextField(blank=True, default='')),
                ('notes_closed', models.TextField(blank=True, default='')),
                ('description', models.TextField(blank=True, default='')),
                ('status', models.CharField(default='ACTIVE', max_length=50)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rfi', to='Trinity_Project.project')),
                ('assigned_to', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rfi_sent', to=settings.AUTH_USER_MODEL)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rfi_created', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='project',
            name='manager',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='projects', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='PendingChange',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('field_name', models.CharField(max_length=50)),
                ('old_value', models.TextField()),
                ('new_value', models.TextField()),
                ('approved', models.BooleanField(default=False)),
                ('created_at', models.DateField(auto_now_add=True)),
                ('updated_at', models.DateField(auto_now=True)),
                ('task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Trinity_Project.task')),
                ('requested_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Announcements',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('content', models.TextField(max_length=255)),
                ('date', models.DateField(auto_now_add=True)),
                ('created_at', models.DateField(auto_now_add=True)),
                ('duration', models.DurationField(default=datetime.timedelta(seconds=7))),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='announcements', to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
